/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockAavePoolOptimism,
  MockAavePoolOptimismInterface,
} from "../../contracts/MockAavePoolOptimism";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getStakeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506107c88061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806323767e451461006757806369328dec1461008c5780639bfd8d611461009f578063a4e47b66146100bf578063dd2a8b11146100e7578063e07aac3c14610110575b600080fd5b61007a61007536600461066f565b610125565b60405190815260200160405180910390f35b61007a61009a3660046106a2565b610150565b61007a6100ad3660046106de565b60016020526000908152604090205481565b61007a6100cd36600461066f565b600060208181529281526040808220909352908152205481565b61007a6100f53660046106de565b6001600160a01b031660009081526001602052604090205490565b61012361011e366004610700565b610375565b005b6001600160a01b03808316600090815260208181526040808320938516835292905220545b92915050565b60006001600160a01b0384166101a55760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206173736574206164647265737360581b60448201526064015b60405180910390fd5b600083116101f55760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161019c565b6001600160a01b0382166102405760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420746f206164647265737360701b604482015260640161019c565b336000908152602081815260408083206001600160a01b03881684529091529020548311156102a85760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161019c565b336000908152602081815260408083206001600160a01b0388168452909152812080548592906102d990849061076c565b90915550506001600160a01b0384166000908152600160205260408120805485929061030690849061076c565b9091555061032090506001600160a01b038516838561053f565b816001600160a01b0316846001600160a01b03167f56c54ba9bd38d8fd62012e42c7ee564519b09763c426d331b3661b537ead19b28560405161036591815260200190565b60405180910390a3509092915050565b6001600160a01b0384166103c35760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206173736574206164647265737360581b604482015260640161019c565b600083116104135760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161019c565b6001600160a01b0382166104695760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206f6e426568616c664f662061646472657373000000000000604482015260640161019c565b61047e6001600160a01b0385163330866105a3565b6001600160a01b03808316600090815260208181526040808320938816835292905290812080548592906104b390849061077f565b90915550506001600160a01b038416600090815260016020526040812080548592906104e090849061077f565b925050819055508061ffff16826001600160a01b0316856001600160a01b03167f22bfdadcec47f7674436cae3dd944373ab6b699da07f1eddb3f9e24533e929cb8660405161053191815260200190565b60405180910390a450505050565b6040516001600160a01b0383811660248301526044820183905261059e91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506105e2565b505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526105dc9186918216906323b872dd9060840161056c565b50505050565b600080602060008451602086016000885af180610605576040513d6000823e3d81fd5b50506000513d9150811561061d57806001141561062a565b6001600160a01b0384163b155b156105dc57604051635274afe760e01b81526001600160a01b038516600482015260240161019c565b80356001600160a01b038116811461066a57600080fd5b919050565b6000806040838503121561068257600080fd5b61068b83610653565b915061069960208401610653565b90509250929050565b6000806000606084860312156106b757600080fd5b6106c084610653565b9250602084013591506106d560408501610653565b90509250925092565b6000602082840312156106f057600080fd5b6106f982610653565b9392505050565b6000806000806080858703121561071657600080fd5b61071f85610653565b93506020850135925061073460408601610653565b9150606085013561ffff8116811461074b57600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561014a5761014a610756565b8082018082111561014a5761014a61075656fea26469706673582212205bb2f5284d8691bd373a3e9ea98709cda1d81e5ebfbd6b721d8ff061589d794264736f6c63430008190033";

type MockAavePoolOptimismConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockAavePoolOptimismConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAavePoolOptimism__factory extends ContractFactory {
  constructor(...args: MockAavePoolOptimismConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockAavePoolOptimism & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockAavePoolOptimism__factory {
    return super.connect(runner) as MockAavePoolOptimism__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAavePoolOptimismInterface {
    return new Interface(_abi) as MockAavePoolOptimismInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockAavePoolOptimism {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockAavePoolOptimism;
  }
}
